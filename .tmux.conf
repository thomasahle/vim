
# Colors
set -g default-terminal "screen-256color"
# Needs this line also to overrides the default color
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Give me more history!
set-option -g history-limit 100000

set-window-option -g mode-keys vi
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
#bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard


# Pres Ctrl+b to reload config file
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D
# switch panes using -arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Easy window/tab switching
# (I just use alacritty for this now)
# bind-key -n C-h previous-window
# bind-key -n C-l next-window

# Remove escape delay
set -s escape-time 0

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# Run bash when we start
set-option -g default-shell "/bin/bash"

# on: tmux will set the clipboard and will pass through clipboard requests from applications running inside the session.
# external: tmux will set the clipboard but will block requests from applications running inside the session. This is the default when tmux thinks that your terminal supports the clipboard feature (e.g., when you've added a terminal override as described above).
# off: tmux will never touch the clipboard. If tmux is defaulting to this, it means it doesn't think your terminal supports the clipboard feature (probably because you didn't set up the terminal override properly).
set -s set-clipboard on


######################
### DESIGN CHANGES ###
######################

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none


#  modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour0 bold'
# panes
set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9'

# statusbar
set -g status-position top
set -g status-justify left
set -g status-style 'bg=colour0'
set -g status-left ''
#set -g status-right '#[fg=colour15,bg=colour0] %d/%m #[fg=colour15,bg=colour0] %H:%M:%S '
# Host statusbar
set -g status-right '#S #[fg=cyan,bold] #H #[default]#[fg=blue]#(tmux display-message -p "#{pane_current_path}" | sed "s#$HOME#~#g")#[default] %H:%M'
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style 'bg=#444444 bold'
setw -g window-status-current-format ' #I#[fg=colour7]:#[fg=colour255]#W#[fg=colour7]#F '
#
setw -g window-status-style 'bg=#333333 bold'
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
#
setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'
#
## messages
set -g message-style 'fg=color15 bg=colour0 bold'

# Prefix highlight
#set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'
#set -g status-right ' #{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}"#{=21:pane_title}" %H:%M %d-%b-%y'


